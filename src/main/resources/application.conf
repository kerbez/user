akka {
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
  }

  remote {
    log-remote-lifecycle-events = off
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = ${clustering.ip}
;       post = 2551
      port = ${clustering.port}      # external (logical) port
#       bind-port = 2551   # internal (bind) port
    }
  }

  cluster {
    roles = ["core"]
    role {
      core.min-nr-of-members = 1
    }
    sharding = {
      role = "core"
    }
    seed-nodes = ["akka.tcp://"${clustering.cluster.name}"@"${clustering.seed-ip}":"${clustering.seed-port}]
    auto-down-unreachable-after = off

    metrics.enabled = off
    failure-detector.threshold = 10.0
    failure-detector.acceptable-heartbeat-pause = 5s
    downing-provider-class = com.ajjpj.simpleakkadowning.SimpleAkkaDowningProvider
  }
}

slick-postgres {
  profile = "slick.jdbc.PostgresProfile$"
  db {
    dataSourceClass = "slick.jdbc.DriverDataSource"
    properties = {
      driver = "org.postgresql.Driver"
      url = "jdbc:postgresql://46.254.20.220:5431/habbit"
      user = "admin"
      password = "postgres"
    }
    minimumIdle = 10
    maximumPoolSize = 20
  }
}

akka-downing {
  active-strategy = keep-majority
  stable-after = 10s
  down-removal-margin = 20s
  keep-majority {
    role = "core"
  }
}

clustering {
 ip = "172.28.1.5"
 ip = ${?CLUSTER_IP}
 ip = "127.0.0.1"
 port = 8080
 port = ${?CLUSTER_PORT}
;  port = 8100
 seed-ip = "172.28.1.5"
 seed-ip = ${?CLUSTER_IP}
;  seed-ip = "127.0.0.1"
 seed-ip = ${?SEED_PORT_1600_TCP_ADDR}
 seed-port = ${?SEED_PORT_1600_TCP_PORT}
;  seed-port = 2551
 seed-port = 8100
 cluster.name = "UserShardSystem"
}
