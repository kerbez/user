akka {
  actor {
    provider = "cluster"
  }

  remote {
    log-remote-lifecycle-events = off
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = "127.0.0.1"
      port = 2551       # external (logical) port
      bind-port = 2551   # internal (bind) port
    }
  }
  loglevel = DEBUG

  event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]

  cluster {
    roles = ["core"]
    role {
      core.min-nr-of-members = 1
    }
    sharding = {
      role = "core"
    }
    seed-nodes = ["akka.tcp://UserShardSystem@127.0.0.1:2551"]
    auto-down-unreachable-after = off

    metrics.enabled = off
    failure-detector.threshold = 10.0
    failure-detector.acceptable-heartbeat-pause = 5s
    downing-provider-class = com.ajjpj.simpleakkadowning.SimpleAkkaDowningProvider
  }
}

slick-postgres {
  profile = "slick.jdbc.PostgresProfile$"
  db {
    dataSourceClass = "slick.jdbc.DriverDataSource"
    properties = {
      driver = "org.postgresql.Driver"
      url = "jdbc:postgresql://46.254.20.220:5431/habbit"
      user = "admin"
      password = "postgres"
    }
    minimumIdle = 10
    maximumPoolSize = 20
  }
}

#akka.jvm-exit-on-fatal-error = false


uri = "http://10.8.1.3:5000/postjson"